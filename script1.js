// –í—Å–µ –∑–¥–∞–Ω–∏—è –ö–ù–ò–¢–£-–ö–ê–ò —Å —Ç–æ—á–Ω—ã–º–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏
const buildings = [
    {
        id: 1,
        name: "–ì–ª–∞–≤–Ω–æ–µ –∑–¥–∞–Ω–∏–µ",
        address: "—É–ª. –ö–∞—Ä–ª–∞ –ú–∞—Ä–∫—Å–∞, 10",
        stop: "–ö–ê–ò",
        coords: [55.79453, 49.12224],
        type: "main"
    },
    {
        id: 2,
        name: "–í—Ç–æ—Ä–æ–µ –∑–¥–∞–Ω–∏–µ", 
        address: "—É–ª. –ß–µ—Ç–∞–µ–≤–∞, 18",
        stop: "—É–ª. –ß–µ—Ç–∞–µ–≤–∞",
        coords: [55.79194, 49.12141],
        type: "educational"
    },
    {
        id: 3,
        name: "–¢—Ä–µ—Ç—å–µ –∑–¥–∞–Ω–∏–µ",
        address: "—É–ª. –õ—å–≤–∞ –¢–æ–ª—Å—Ç–æ–≥–æ, 15",
        stop: "—É–ª. –õ.–¢–æ–ª—Å—Ç–æ–≥–æ",
        coords: [55.78891, 49.12363],
        type: "educational"
    },
    {
        id: 4,
        name: "–ß–µ—Ç–≤–µ—Ä—Ç–æ–µ –∑–¥–∞–Ω–∏–µ",
        address: "—É–ª. –ì–æ—Ä—å–∫–æ–≥–æ, 28/17",
        stop: "—É–ª. –õ.–¢–æ–ª—Å—Ç–æ–≥–æ",
        coords: [55.78925, 49.12412],
        type: "educational"
    },
    {
        id: 5,
        name: "–ü—è—Ç–æ–µ –∑–¥–∞–Ω–∏–µ",
        address: "—É–ª. –ö–∞—Ä–ª–∞ –ú–∞—Ä–∫—Å–∞, 31/7",
        stop: "–ü–ª–æ—â–∞–¥—å –°–≤–æ–±–æ–¥—ã",
        coords: [55.79621, 49.11535],
        type: "administrative"
    },
    {
        id: 6,
        name: "–®–µ—Å—Ç–æ–µ –∑–¥–∞–Ω–∏–µ (–ê–≤–∏–∞—Ü–∏–æ–Ω–Ω—ã–π –∏–Ω—Å—Ç–∏—Ç—É—Ç)",
        address: "—É–ª. –î–µ–º–µ–Ω—Ç—å–µ–≤–∞, 2–∞",
        stop: "–ò–Ω—Å—Ç–∏—Ç—É—Ç",
        coords: [55.85551, 49.07027],
        type: "research"
    },
    {
        id: 7,
        name: "–°–µ–¥—å–º–æ–µ –∑–¥–∞–Ω–∏–µ",
        address: "—É–ª. –ë–æ–ª—å—à–∞—è –ö—Ä–∞—Å–Ω–∞—è, 55",
        stop: "–ì–æ–≥–æ–ª—è",
        coords: [55.79462, 49.12284],
        type: "educational"
    },
    {
        id: 8,
        name: "–í–æ—Å—å–º–æ–µ –∑–¥–∞–Ω–∏–µ (–ù–æ–≤–æ–µ)",
        address: "—É–ª. –ß–µ—Ç–∞–µ–≤–∞, 18–∞",
        stop: "–ß–∏—Å—Ç–æ–ø–æ–ª—å—Å–∫–∞—è",
        coords: [55.79228, 49.12189],
        type: "educational"
    }
];

document.addEventListener('DOMContentLoaded', function() {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞—Ä—Ç—ã (—Ü–µ–Ω—Ç—Ä - –≥–ª–∞–≤–Ω–æ–µ –∑–¥–∞–Ω–∏–µ)
    const map = L.map('kai-map').setView([55.7919, 49.1214], 15);
    
    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–ª–æ—è OpenStreetMap
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a>'
    }).addTo(map);

    // –°–æ–∑–¥–∞–Ω–∏–µ –º–∞—Ä–∫–µ—Ä–æ–≤
    buildings.forEach(building => {
        // –°–æ–∑–¥–∞–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–π HTML –¥–ª—è –º–∞—Ä–∫–µ—Ä–∞
        const markerHtml = `
            <div class="building-marker" style="background-color: ${getColorByType(building.type)}">
                ${building.id}
            </div>
        `;
        
        // –°–æ–∑–¥–∞–µ–º –∏–∫–æ–Ω–∫—É
        const customIcon = L.divIcon({
            html: markerHtml,
            className: '',
            iconSize: [30, 30]
        });
        
        // –î–æ–±–∞–≤–ª—è–µ–º –º–∞—Ä–∫–µ—Ä –Ω–∞ –∫–∞—Ä—Ç—É
        const marker = L.marker(building.coords, {
            icon: customIcon
        }).addTo(map);
        
        // –í—Å–ø–ª—ã–≤–∞—é—â–µ–µ –æ–∫–Ω–æ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
        marker.bindPopup(`
            <b>${building.name}</b>
            <small>${building.address}</small>
            <div><span class="transport-icon">üöå</span> ${building.stop}</div>
        `);
        
        // –î–æ–±–∞–≤–ª—è–µ–º ID –∑–¥–∞–Ω–∏—è –≤ –¥–∞–Ω–Ω—ã–µ –º–∞—Ä–∫–µ—Ä–∞
        marker.buildingId = building.id;
    });

    // –ó–∞–ø–æ–ª–Ω—è–µ–º –≤—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫
    const buildingSelect = document.getElementById('building-select');
    buildings.forEach(building => {
        const option = document.createElement('option');
        option.value = building.id;
        option.textContent = `${building.id}. ${building.name} (${building.address})`;
        buildingSelect.appendChild(option);
    });
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∑–¥–∞–Ω–∏—è
    buildingSelect.addEventListener('change', function() {
        const selectedId = parseInt(this.value);
        if (selectedId) {
            const selectedBuilding = buildings.find(b => b.id === selectedId);
            map.setView(selectedBuilding.coords, 18);
        } else {
            // –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∑–¥–∞–Ω–∏—è
            const bounds = L.latLngBounds(buildings.map(b => b.coords));
            map.fitBounds(bounds.pad(0.2));
        }
    });
    
    // –ó–∞–ø–æ–ª–Ω—è–µ–º —Ç–∞–±–ª–∏—Ü—É –∑–¥–∞–Ω–∏–π
    const buildingsTbody = document.getElementById('buildings-tbody');
    buildings.forEach(building => {
        const row = document.createElement('tr');
        row.innerHTML = `
            <td>${building.id}</td>
            <td>${building.name}</td>
            <td>${building.address}</td>
            <td><span class="transport-icon">üöå</span> ${building.stop}</td>
        `;
        row.addEventListener('click', () => {
            map.setView(building.coords, 18);
        });
        row.style.cursor = 'pointer';
        buildingsTbody.appendChild(row);
    });
    
    // –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é/–∞–¥—Ä–µ—Å—É
    const searchInput = document.getElementById('search-input');
    searchInput.addEventListener('input', function() {
        const searchText = this.value.toLowerCase();
        if (searchText.length > 2) {
            const found = buildings.filter(b => 
                b.name.toLowerCase().includes(searchText) || 
                b.address.toLowerCase().includes(searchText)
            .map(b => b.coords));
            
            if (found.length > 0) {
                const bounds = L.latLngBounds(found);
                map.fitBounds(bounds.pad(0.2));
            }
        }
    });
});

// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ü–≤–µ—Ç –º–∞—Ä–∫–µ—Ä–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –∑–¥–∞–Ω–∏—è
function getColorByType(type) {
    const colors = {
        'main': '#e74c3c',
        'educational': '#3498db',
        'administrative': '#2ecc71',
        'research': '#9b59b6'
    };
    return colors[type] || '#3498db';
}